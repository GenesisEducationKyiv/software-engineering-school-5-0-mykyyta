services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: weatherdb
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 3s
      timeout: 5s
      retries: 5
    command: >
      redis-server
      --save ""
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru


  migrate:
    image: migrate/migrate:v4.16.2
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ./migrations:/migrations
    entrypoint: [
      "migrate",
      "-path", "/migrations",
      "-database", "${DB_URL}",
      "up"
    ]
    restart: on-failure


  app:
    build: .
    restart: on-failure
    ports:
      - "8080:8080"
    depends_on:
      migrate:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
    stop_grace_period: 5s
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/etc/grafana/dashboards